/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.6-master-76310b1
 */
function SidenavService(e,n){return function(o){function t(){return e.when(o).then(function(e){return c=e,e})}var r,i="SideNav '"+o+"' is not available!",c=e.get(o);return c||e.notFoundError(o),r={isOpen:function(){return c&&c.isOpen()},isLockedOpen:function(){return c&&c.isLockedOpen()},toggle:function(){return c?c.toggle():n.reject(i)},open:function(){return c?c.open():n.reject(i)},close:function(){return c?c.close():n.reject(i)},then:function(e){var o=c?n.when(c):t();return o.then(e||angular.noop)}}}}function SidenavFocusDirective(){return{restrict:"A",require:"^mdSidenav",link:function(e,n,o,t){}}}function SidenavDirective(e,n,o,t,r,i,c,a,d,s){function u(i,u,l,m){function p(e,n){i.isLockedOpen=e,e===n?u.toggleClass("_md-locked-open",!!e):r[e?"addClass":"removeClass"](u,"_md-locked-open"),k&&k.toggleClass("_md-locked-open",!!e)}function v(e){var o=n.findFocusTarget(u)||n.findFocusTarget(u,"[md-sidenav-focus]")||u,t=u.parent();return t[e?"on":"off"]("keydown",$),k&&k[e?"on":"off"]("click",O),e&&(C=s[0].activeElement),f(e),h=d.all([e&&k?r.enter(k,t):k?r.leave(k):d.when(!0),r[e?"removeClass":"addClass"](u,"_md-closed")]).then(function(){i.isOpen&&o&&o.focus()})}function f(e){var n=u.parent();e&&!S?(S=n.css("overflow"),n.css("overflow","hidden")):angular.isDefined(S)&&(n.css("overflow",S),S=void 0)}function g(e){return i.isOpen==e?d.when(!0):d(function(o){i.isOpen=e,n.nextTick(function(){h.then(function(e){i.isOpen||(C&&C.focus(),C=null),o(e)})})})}function $(e){var n=e.keyCode===o.KEY_CODE.ESCAPE;return n?O(e):d.when(!0)}function O(e){return e.preventDefault(),m.close()}var S,k,C=null,h=d.when(!0),w=c(l.mdIsLockedOpen),D=function(){return w(i.$parent,{$media:function(n){return a.warn("$media is deprecated for is-locked-open. Use $mdMedia instead."),e(n)},$mdMedia:e})};angular.isDefined(l.mdDisableBackdrop)||(k=n.createBackdrop(i,"_md-sidenav-backdrop md-opaque ng-enter")),t(u),k&&t.inherit(k,u),u.on("$destroy",function(){k&&k.remove(),m.destroy()}),i.$on("$destroy",function(){k&&k.remove()}),i.$watch(D,p),i.$watch("isOpen",v),m.$toggleOpen=g}return{restrict:"E",scope:{isOpen:"=?mdIsOpen"},controller:"$mdSidenavController",compile:function(e){return e.addClass("_md-closed"),e.attr("tabIndex","-1"),u}}}function SidenavController(e,n,o,t,r){var i=this;i.isOpen=function(){return!!e.isOpen},i.isLockedOpen=function(){return!!e.isLockedOpen},i.open=function(){return i.$toggleOpen(!0)},i.close=function(){return i.$toggleOpen(!1)},i.toggle=function(){return i.$toggleOpen(!e.isOpen)},i.$toggleOpen=function(n){return r.when(e.isOpen=n)},i.destroy=t.register(i,o.mdComponentId)}goog.provide("ng.material.components.sidenav"),goog.require("ng.material.components.backdrop"),goog.require("ng.material.core"),angular.module("material.components.sidenav",["material.core","material.components.backdrop"]).factory("$mdSidenav",SidenavService).directive("mdSidenav",SidenavDirective).directive("mdSidenavFocus",SidenavFocusDirective).controller("$mdSidenavController",SidenavController),SidenavService.$inject=["$mdComponentRegistry","$q"],SidenavDirective.$inject=["$mdMedia","$mdUtil","$mdConstant","$mdTheming","$animate","$compile","$parse","$log","$q","$document"],SidenavController.$inject=["$scope","$element","$attrs","$mdComponentRegistry","$q"],ng.material.components.sidenav=angular.module("material.components.sidenav");