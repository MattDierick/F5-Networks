/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.0.6-master-76310b1
 */
!function(e,n,t){"use strict";function i(e,t,i,c,d,a){function o(o,s){var u=o.children(),l=s.hasOwnProperty("mdIndeterminate");return s.type="checkbox",s.tabindex=s.tabindex||"0",o.attr("role",s.type),o.on("click",function(e){this.hasAttribute("disabled")&&e.stopImmediatePropagation()}),u.on("focus",function(){o.focus()}),function(o,s,u,m){function f(e,n,t){u[e]&&o.$watch(u[e],function(e){t[e]&&s.attr(n,t[e])})}function h(e){var n=e.which||e.keyCode;n!==i.KEY_CODE.SPACE&&n!==i.KEY_CODE.ENTER||(e.preventDefault(),s.hasClass("md-focused")||s.addClass("md-focused"),v(e))}function v(e){s[0].hasAttribute("disabled")||o.$apply(function(){var n=u.ngChecked?u.checked:!m.$viewValue;m.$setViewValue(n,e&&e.type),m.$render()})}function p(){m.$viewValue&&!k?s.addClass(r):s.removeClass(r)}function b(e){k=e!==!1,k&&s.attr("aria-checked","mixed"),s.toggleClass("md-indeterminate",k)}var k;m=m||d.fakeNgModel(),c(s),l&&(b(),o.$watch(u.mdIndeterminate,b)),u.ngChecked&&o.$watch(o.$eval.bind(o,u.ngChecked),m.$setViewValue.bind(m)),f("ngDisabled","tabindex",{"true":"-1","false":u.tabindex}),t.expectWithText(s,"aria-label"),e.link.pre(o,{on:n.noop,0:{}},u,[m]),o.mouseActive=!1,s.on("click",v).on("keypress",h).on("mousedown",function(){o.mouseActive=!0,a(function(){o.mouseActive=!1},100)}).on("focus",function(){o.mouseActive===!1&&s.addClass("md-focused")}).on("blur",function(){s.removeClass("md-focused")}),m.$render=p}}e=e[0];var r="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="_md-container" md-ink-ripple md-ink-ripple-checkbox><div class="_md-icon"></div></div><div ng-transclude class="_md-label"></div>',compile:o}}n.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",i),i.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"]}(window,window.angular);